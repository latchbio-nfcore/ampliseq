
from dataclasses import dataclass
import typing
import typing_extensions

from flytekit.core.annotation import FlyteAnnotation

from latch.types.metadata import NextflowParameter
from latch.types.file import LatchFile
from latch.types.directory import LatchDir, LatchOutputDir

# Import these into your `__init__.py` file:
#
# from .parameters import generated_parameters

generated_parameters = {
    'input': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title='Main arguments',
        description='Path to tab-separated sample sheet',
    ),
    'input_fasta': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Path to ASV/OTU fasta file',
    ),
    'input_folder': NextflowParameter(
        type=typing.Optional[LatchDir],
        default=None,
        section_title=None,
        description='Path to folder containing zipped FastQ files',
    ),
    'FW_primer': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Forward primer sequence',
    ),
    'RV_primer': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Reverse primer sequence',
    ),
    'metadata': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Path to metadata sheet, when missing most downstream analysis are skipped (barplots, PCoA plots, ...).',
    ),
    'multiregion': NextflowParameter(
        type=typing.Optional[LatchFile],
        default=None,
        section_title=None,
        description='Path to multi-region definition sheet, for multi-region analysis with Sidle',
    ),
    'outdir': NextflowParameter(
        type=typing_extensions.Annotated[LatchDir, FlyteAnnotation({'output': True})],
        default=None,
        section_title=None,
        description='The output directory where the results will be saved. You have to use absolute paths to storage on Cloud infrastructure.',
    ),
    'save_intermediates': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description="Save intermediate results such as QIIME2's qza and qzv files",
    ),
    'email': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Email address for completion summary.',
    ),
    'illumina_novaseq': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Sequencing input',
        description='If data has binned quality scores such as Illumina NovaSeq',
    ),
    'pacbio': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If data is single-ended PacBio reads instead of Illumina',
    ),
    'iontorrent': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If data is single-ended IonTorrent reads instead of Illumina',
    ),
    'single_end': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If data is single-ended Illumina reads instead of paired-end',
    ),
    'illumina_pe_its': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If analysing ITS amplicons or any other region with large length variability with Illumina paired end reads',
    ),
    'multiple_sequencing_runs': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If using `--input_folder`: samples were sequenced in multiple sequencing runs',
    ),
    'extension': NextflowParameter(
        type=typing.Optional[str],
        default='/*_R{1,2}_001.fastq.gz',
        section_title=None,
        description='If using `--input_folder`: naming of sequencing files',
    ),
    'min_read_counts': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Set read count threshold for failed samples.',
    ),
    'ignore_empty_input_files': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Ignore input files with too few reads.',
    ),
    'retain_untrimmed': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Primer removal',
        description='Cutadapt will retain untrimmed reads, choose only if input reads are not expected to contain primer sequences.',
    ),
    'cutadapt_min_overlap': NextflowParameter(
        type=typing.Optional[int],
        default=3,
        section_title=None,
        description='Sets the minimum overlap for valid matches of primer sequences with reads for cutadapt (-O).',
    ),
    'cutadapt_max_error_rate': NextflowParameter(
        type=typing.Optional[float],
        default=0.1,
        section_title=None,
        description='Sets the maximum error rate for valid matches of primer sequences with reads for cutadapt (-e).',
    ),
    'double_primer': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Cutadapt will be run twice to ensure removal of potential double primers',
    ),
    'ignore_failed_trimming': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Ignore files with too few reads after trimming.',
    ),
    'trunclenf': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title='Read trimming and quality filtering',
        description='DADA2 read truncation value for forward strand, set this to 0 for no truncation',
    ),
    'trunclenr': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description='DADA2 read truncation value for reverse strand, set this to 0 for no truncation',
    ),
    'trunc_qmin': NextflowParameter(
        type=typing.Optional[int],
        default=25,
        section_title=None,
        description='If --trunclenf and --trunclenr are not set, these values will be automatically determined using this median quality score',
    ),
    'trunc_rmin': NextflowParameter(
        type=typing.Optional[float],
        default=0.75,
        section_title=None,
        description='Assures that values chosen with --trunc_qmin will retain a fraction of reads.',
    ),
    'max_ee': NextflowParameter(
        type=typing.Optional[int],
        default=2,
        section_title=None,
        description='DADA2 read filtering option',
    ),
    'min_len': NextflowParameter(
        type=typing.Optional[int],
        default=50,
        section_title=None,
        description='DADA2 read filtering option',
    ),
    'max_len': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description='DADA2 read filtering option',
    ),
    'ignore_failed_filtering': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Ignore files with too few reads after quality filtering.',
    ),
    'sample_inference': NextflowParameter(
        type=typing.Optional[str],
        default='independent',
        section_title='Amplicon Sequence Variants (ASV) calculation',
        description='Mode of sample inference: "independent", "pooled" or "pseudo"',
    ),
    'concatenate_reads': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Not recommended: When paired end reads are not sufficiently overlapping for merging.',
    ),
    'vsearch_cluster': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='ASV post processing',
        description='Post-cluster ASVs with VSEARCH',
    ),
    'vsearch_cluster_id': NextflowParameter(
        type=typing.Optional[float],
        default=0.97,
        section_title=None,
        description='Pairwise Identity value used when post-clustering ASVs if `--vsearch_cluster` option is used (default: 0.97).',
    ),
    'filter_ssu': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Enable SSU filtering. Comma separated list of kingdoms (domains) in Barrnap, a combination (or one) of "bac", "arc", "mito", and "euk". ASVs that have their lowest evalue in that kingdoms are kept.',
    ),
    'min_len_asv': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description='Minimal ASV length',
    ),
    'max_len_asv': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description='Maximum ASV length',
    ),
    'filter_codons': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Filter ASVs based on codon usage',
    ),
    'orf_start': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Starting position of codon tripletts',
    ),
    'orf_end': NextflowParameter(
        type=typing.Optional[int],
        default=None,
        section_title=None,
        description='Ending position of codon tripletts',
    ),
    'stop_codons': NextflowParameter(
        type=typing.Optional[str],
        default='TAA,TAG',
        section_title=None,
        description='Define stop codons',
    ),
    'dada_ref_taxonomy': NextflowParameter(
        type=typing.Optional[str],
        default='silva=138',
        section_title='Taxonomic database',
        description='Name of supported database, and optionally also version number',
    ),
    'dada_ref_tax_custom': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to a custom DADA2 reference taxonomy database',
    ),
    'dada_ref_tax_custom_sp': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to a custom DADA2 reference taxonomy database for species assignment',
    ),
    'dada_assign_taxlevels': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description="Comma separated list of taxonomic levels used in DADA2's assignTaxonomy function",
    ),
    'cut_dada_ref_taxonomy': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If the expected amplified sequences are extracted from the DADA2 reference taxonomy database',
    ),
    'dada_addspecies_allowmultiple': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If multiple exact matches against different species are returned',
    ),
    'dada_taxonomy_rc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If reverse-complement of each sequences will be also tested for classification',
    ),
    'pplace_tree': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Newick file with reference phylogenetic tree. Requires also `--pplace_aln` and `--pplace_model`.',
    ),
    'pplace_aln': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='File with reference sequences. Requires also `--pplace_tree` and `--pplace_model`.',
    ),
    'pplace_model': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description="Phylogenetic model to use in placement, e.g. 'LG+F' or 'GTR+I+F'. Requires also `--pplace_tree` and `--pplace_aln`.",
    ),
    'pplace_alnmethod': NextflowParameter(
        type=typing.Optional[str],
        default='hmmer',
        section_title=None,
        description='Method used for alignment, "hmmer" or "mafft"',
    ),
    'pplace_taxonomy': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Tab-separated file with taxonomy assignments of reference sequences.',
    ),
    'qiime_ref_taxonomy': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Name of supported database, and optionally also version number',
    ),
    'qiime_ref_tax_custom': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to files of a custom QIIME2 reference taxonomy database (tarball, or two comma-separated files)',
    ),
    'classifier': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to QIIME2 trained classifier file (typically *-classifier.qza)',
    ),
    'kraken2_ref_taxonomy': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Name of supported database, and optionally also version number',
    ),
    'kraken2_ref_tax_custom': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to a custom Kraken2 reference taxonomy database (*.tar.gz|*.tgz archive or folder)',
    ),
    'kraken2_assign_taxlevels': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Comma separated list of taxonomic levels used in Kraken2. Will overwrite default values.',
    ),
    'kraken2_confidence': NextflowParameter(
        type=typing.Optional[float],
        default=0.0,
        section_title=None,
        description='Confidence score threshold for taxonomic classification.',
    ),
    'sintax_ref_taxonomy': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Name of supported database, and optionally also version number',
    ),
    'addsh': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If ASVs should be assigned to UNITE species hypotheses (SHs). Only relevant for ITS data.',
    ),
    'cut_its': NextflowParameter(
        type=typing.Optional[str],
        default='none',
        section_title=None,
        description='Part of ITS region to use for taxonomy assignment: "full", "its1", or "its2"',
    ),
    'its_partial': NextflowParameter(
        type=typing.Optional[int],
        default=0,
        section_title=None,
        description='Cutoff for partial ITS sequences. Only full sequences by default.',
    ),
    'sidle_ref_taxonomy': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Multi-region taxonomic database',
        description='Name of supported database, and optionally also version number',
    ),
    'sidle_ref_tax_custom': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Comma separated paths to three files: reference taxonomy sequences (*.fasta), reference taxonomy strings (*.txt)',
    ),
    'sidle_ref_tree_custom': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Path to SIDLE reference taxonomy tree (*.qza)',
    ),
    'exclude_taxa': NextflowParameter(
        type=typing.Optional[str],
        default='mitochondria,chloroplast',
        section_title='ASV filtering',
        description='Comma separated list of unwanted taxa, to skip taxa filtering use "none"',
    ),
    'min_frequency': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Abundance filtering',
    ),
    'min_samples': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Prevalence filtering',
    ),
    'metadata_category': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title='Downstream analysis',
        description='Comma separated list of metadata column headers for statistics.',
    ),
    'metadata_category_barplot': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Comma separated list of metadata column headers for plotting average relative abundance barplots.',
    ),
    'qiime_adonis_formula': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Formula for QIIME2 ADONIS metadata feature importance test for beta diversity distances',
    ),
    'picrust': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If the functional potential of the bacterial community is predicted.',
    ),
    'sbdiexport': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='If data should be exported in SBDI (Swedish biodiversity infrastructure) Excel format.',
    ),
    'diversity_rarefaction_depth': NextflowParameter(
        type=typing.Optional[int],
        default=500,
        section_title=None,
        description='Minimum rarefaction depth for diversity analysis. Any sample below that threshold will be removed.',
    ),
    'ancom_sample_min_count': NextflowParameter(
        type=typing.Optional[int],
        default=1,
        section_title=None,
        description='Minimum sample counts to retain a sample for ANCOM analysis. Any sample below that threshold will be removed.',
    ),
    'tax_agglom_min': NextflowParameter(
        type=typing.Optional[int],
        default=2,
        section_title=None,
        description='Minimum taxonomy agglomeration level for taxonomic classifications',
    ),
    'tax_agglom_max': NextflowParameter(
        type=typing.Optional[int],
        default=6,
        section_title=None,
        description='Maximum taxonomy agglomeration level for taxonomic classifications',
    ),
    'report_template': NextflowParameter(
        type=typing.Optional[str],
        default='${projectDir}/assets/report_template.Rmd',
        section_title='Pipeline summary report',
        description='Path to Markdown file (Rmd)',
    ),
    'report_css': NextflowParameter(
        type=typing.Optional[str],
        default='${projectDir}/assets/nf-core_style.css',
        section_title=None,
        description='Path to style file (css)',
    ),
    'report_logo': NextflowParameter(
        type=typing.Optional[str],
        default='${projectDir}/assets/nf-core-ampliseq_logo_light_long.png',
        section_title=None,
        description='Path to logo file (png)',
    ),
    'report_title': NextflowParameter(
        type=typing.Optional[str],
        default='Summary of analysis results',
        section_title=None,
        description='String used as report title',
    ),
    'report_abstract': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description="Path to Markdown file (md) that replaces the 'Abstract' section",
    ),
    'skip_fastqc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title='Skipping specific steps',
        description='Skip FastQC',
    ),
    'skip_cutadapt': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip primer trimming with cutadapt. This is not recommended! Use only in case primer sequences were removed before and the data does not contain any primer sequences.',
    ),
    'skip_dada_quality': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip quality check with DADA2. Can only be skipped when `--trunclenf` and `--trunclenr` are set.',
    ),
    'skip_barrnap': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip annotating SSU matches.',
    ),
    'skip_qiime': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip all steps that are executed by QIIME2, including QIIME2 software download, taxonomy assignment by QIIME2, barplots, relative abundance tables, diversity analysis, differential abundance testing.',
    ),
    'skip_qiime_downstream': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip steps that are executed by QIIME2 except for taxonomic classification. Skip steps including barplots, relative abundance tables, diversity analysis, differential abundance testing.',
    ),
    'skip_taxonomy': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip taxonomic classification. Incompatible with `--sbdiexport`',
    ),
    'skip_dada_taxonomy': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip taxonomic classification with DADA2',
    ),
    'skip_dada_addspecies': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip species level when using DADA2 for taxonomic classification. This reduces the required memory dramatically under certain conditions. Incompatible with `--sbdiexport`',
    ),
    'skip_barplot': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip producing barplot',
    ),
    'skip_abundance_tables': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip producing any relative abundance tables',
    ),
    'skip_alpha_rarefaction': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip alpha rarefaction',
    ),
    'skip_diversity_indices': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip alpha and beta diversity analysis',
    ),
    'skip_ancom': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip differential abundance testing',
    ),
    'skip_multiqc': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip MultiQC reporting',
    ),
    'skip_report': NextflowParameter(
        type=typing.Optional[bool],
        default=None,
        section_title=None,
        description='Skip Markdown summary report',
    ),
    'seed': NextflowParameter(
        type=typing.Optional[int],
        default=100,
        section_title='Generic options',
        description='Specifies the random seed.',
    ),
    'multiqc_methods_description': NextflowParameter(
        type=typing.Optional[str],
        default=None,
        section_title=None,
        description='Custom MultiQC yaml file containing HTML including a methods description.',
    ),
    'max_cpus': NextflowParameter(
        type=typing.Optional[int],
        default=16,
        section_title='Max job request options',
        description='Maximum number of CPUs that can be requested for any single job.',
    ),
    'max_memory': NextflowParameter(
        type=typing.Optional[str],
        default='128.GB',
        section_title=None,
        description='Maximum amount of memory that can be requested for any single job.',
    ),
    'max_time': NextflowParameter(
        type=typing.Optional[str],
        default='240.h',
        section_title=None,
        description='Maximum amount of time that can be requested for any single job.',
    ),
}

